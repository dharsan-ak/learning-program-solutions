DROP TABLE customers;
CREATE TABLE customers (
    customer_id NUMBER PRIMARY KEY,
    name VARCHAR2(50),
    age NUMBER,
    balance NUMBER,
    interest_rate NUMBER,
    is_vip VARCHAR2(5)
);


INSERT INTO customers VALUES (1, 'Ravi', 65, 12000, 8.5, 'FALSE');
INSERT INTO customers VALUES (2, 'Meena', 45, 9500, 9.0, 'FALSE');
INSERT INTO customers VALUES (3, 'Karthik', 70, 5000, 10.0, 'FALSE');
INSERT INTO customers VALUES (4, 'Anjali', 34, 11000, 8.0, 'FALSE');
COMMIT;

BEGIN
   FOR c IN (SELECT * FROM customers) LOOP
      IF c.age > 60 THEN
         UPDATE customers
         SET interest_rate = interest_rate - 1
         WHERE customer_id = c.customer_id;
      END IF;
   END LOOP;
   COMMIT;
END;

SELECT * FROM customers;

BEGIN
   FOR c IN (SELECT * FROM customers) LOOP
      IF c.balance > 10000 THEN
         UPDATE customers
         SET is_vip = 'TRUE'
         WHERE customer_id = c.customer_id;
      END IF;
   END LOOP;
   COMMIT;
END;

SELECT name, balance, is_vip FROM customers;

DROP TABLE loans;
CREATE TABLE loans (
    loan_id NUMBER PRIMARY KEY,
    customer_id NUMBER,
    due_date DATE
);

INSERT INTO loans VALUES (1, 1, SYSDATE + 10);
INSERT INTO loans VALUES (2, 2, SYSDATE + 40);
INSERT INTO loans VALUES (3, 3, SYSDATE + 25);
COMMIT;

SET SERVEROUTPUT ON;

BEGIN
   FOR l IN (
       SELECT l.loan_id, c.name, l.due_date
       FROM loans l
       JOIN customers c ON l.customer_id = c.customer_id
       WHERE l.due_date <= SYSDATE + 30
   ) LOOP
      DBMS_OUTPUT.PUT_LINE('Reminder: Loan ID ' || l.loan_id || ' for ' || l.name || ' is due on ' || TO_CHAR(l.due_date, 'DD-MON-YYYY'));
   END LOOP;
END;
